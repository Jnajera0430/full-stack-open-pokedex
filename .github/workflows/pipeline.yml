name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]
jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Cache Playwright Browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-browsers
          restore-keys: ${{ runner.os }}-playwright-browsers
      - name: Install Playwright browsers
        run: npx playwright install && sudo npx playwright install-deps
      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run eslint
      - name: Build
        run: npm run build
      - name: Tests
        run: npm run test:unit
      - name: Run projects
        run: npm start &
        continue-on-error: true
      - name: e2e tests
        run: npm run test:e2e
      - name: Debug GitHub context
        run: "echo Event Name: ${{ github.event_name }} | Ref: ${{ github.ref }}"
      - name: Trigger deployment
        if: ${{ github.event_name == 'push' }}
        run: curl -X POST "https://api.render.com/76deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}"
  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Configuración para hacer bump de la versión con patch (incrementar el último número)
          default_bump: patch
          tag_prefix: "v" # Prefijo de las etiquetas (opcional)
          dry_run: false # Cambia a true si deseas probar el flujo sin crear la etiqueta real
