name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]
jobs:
  simple_deployment_pipeline:
    name: Build and Deploy Pipeline ‚úÖ
    runs-on: ubuntu-20.04
    steps:
      - name: Determine if deployment should be skipped
        id: check_skip
        run: |
          SKIP_DEPLOY=$(echo "${{ toJson(github.event.commits.message) }}" | grep -q '#skip' && echo true || echo false)
          echo "SKIP_DEPLOY=$SKIP_DEPLOY" >> $GITHUB_ENV
          echo "::set-output name=should_skip::$SKIP_DEPLOY"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run eslint
      - name: Build
        run: npm run build
      - name: Tests
        run: npm run test:unit
      - name: Run projects
        run: npm start &
        continue-on-error: true
      - name: e2e tests
        run: npm run test:e2e
      - name: Trigger deployment
        if: ${{ steps.check_skip.outputs.should_skip == 'false' && github.event_name == 'push' }}
        run: curl -X POST "https://api.render.com/76deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}"
  tag_release:
    name: Tag Release üè∑Ô∏è
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    if: ${{ needs.simple_deployment_pipeline.outputs.should_skip == 'false' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Configuraci√≥n para hacer bump de la versi√≥n con patch (incrementar el √∫ltimo n√∫mero)
          default_bump: patch
          tag_prefix: "v" # Prefijo de las etiquetas (opcional)
          dry_run: false # Cambia a true si deseas probar el flujo sin crear la etiqueta real
